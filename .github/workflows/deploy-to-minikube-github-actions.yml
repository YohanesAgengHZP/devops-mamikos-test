name: deploy vue app into minikube cluster

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:

jobs:
  checkout:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
  
  build_and_push:
    runs-on: self-hosted
    needs: checkout
    env:
      DOCKERFILE_PATH: ${{ vars.DOCKERFILE_PATH }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}
      IMAGE_TAG: ${{ vars.IMAGE_TAG }}
      BASE_PATH: ${{ vars.BASE_PATH }}
      DEV_BRANCH: ${{ vars.DEV_BRANCH }}
    steps:
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.REGISTRY_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Pull Latest Code
        run: |
          cd $BASE_PATH
          git pull origin $DEV_BRANCH

      - name: Pull Existing Image for Cache
        run: |
          docker pull $IMAGE_NAME || true

      - name: Build and Push Image to GHCR with Cache
        run: |
          docker build -f $DOCKERFILE_PATH -t $IMAGE_NAME \
            --cache-from=$IMAGE_NAME $BASE_PATH
          docker push $IMAGE_NAME

  Deploy:
    runs-on: self-hosted
    needs: build_and_push
    env:
      DEPLOYMENT_PATH: ${{ vars.DEPLOYMENT_PATH }}
      HPA_FILE_PATH: ${{ vars.HPA_FILE_PATH }}
    steps:
      - name: Deploy to Minikube
        run: |
          kubectl apply -f $DEPLOYMENT_PATH
          kubectl apply -f $HPA_FILE_PATH

  Test_services:
    runs-on: self-hosted
    needs: Deploy 
    steps:
    - name: Test Service URLs
      run: |
          minikube service list
          minikube service vuejs-app -n mamikos-devops --url

  Cleanup:
    runs-on: self-hosted
    needs: Test_services
    steps:
    - name: Cleanup Docker
      run: |
        echo "Removing stopped containers..."
        docker container prune -f
        
        echo "Removing dangling images..."
        docker image prune -f
        
        echo "Removing unused images..."
        docker image prune -a -f
        
        echo "Cleanup completed."
