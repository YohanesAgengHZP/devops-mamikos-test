name: deploy vue app into minikube cluster

on:
  # Triggers the workflow on push or pull request events but only for the "dev" branch
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Step 1: Checkout code
  checkout:
    runs-on: self-hosted
    name: Checkout Code
    steps:
    - uses: actions/checkout@v2
  

  # Step 2: Build and push Docker image to GHCR
  build_and_push:
    runs-on: self-hosted
    name: Build and Push Docker Image
    needs: checkout  # Runs after checkout
    env:
      DOCKERFILE_PATH: ${{ vars.DOCKERFILE_PATH }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}
      IMAGE_TAG: ${{ vars.IMAGE_TAG }}
      BASE_PATH: ${{ vars.BASE_PATH }}
      DEV_BRANCH: ${{ vars.DEV_BRANCH}}
    steps:
    - name: Pull Latest Code
      run: |
        cd $BASE_PATH
        git pull origin $DEV_BRANCH

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.REGISTRY_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

    - name: Build and Push Image to GHCR
      run: |
        docker build -f $DOCKERFILE_PATH -t $IMAGE_NAME:$IMAGE_TAG $BASE_PATH
        docker push $IMAGE_NAME:$IMAGE_TAG
      env:
        GHCR_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  # Step 3: apply deployment
  Deploy:
    runs-on: self-hosted
    needs: build_and_push
    steps:
      - name: Deploy to Minikube
        run: |
          kubectl apply -f $DEPLOYMENT_FILE_PATH
        env:
          DEPLOYMENT_FILE_PATH: ${{ vars.DEPLOYMENT_PATH }}

  HPA_Testing:
    runs-on: self-hosted
    needs: Deploy
    steps:
      - name: stress test for cpu load
        run: |
          kubectl apply -f $LOAD_TEST_PATH
        env:
          LOAD_TEST_PATH: ${{ vars.LOAD_TEST_PATH }}


  # Step 5: Test service URLs
  Test_services:
    runs-on: self-hosted
    name: Test Service URLs
    needs: HPA_Testing 
    steps:
    - name: Test Service URLs
      run: |
          minikube service list
          minikube service vuejs-app -n mamikos-devops --url

  # Step 6: Clean from unused docker components (images, containers)
  Cleanup:
    runs-on: self-hosted
    needs: Test_services
    steps:
    - name: Cleanup Docker
      run: |
        echo "Removing stopped containers..."
        docker container prune -f
        
        echo "Removing dangling images..."
        docker image prune -f
        
        echo "Removing unused images..."
        docker image prune -a -f
        
        echo "Cleanup completed."
